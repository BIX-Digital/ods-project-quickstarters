FROM cd/jenkins-slave-base

MAINTAINER Michael Sauter <michael.sauter@boehringer-ingelheim.com>

# Labels consumed by Red Hat build service
LABEL com.redhat.component="jenkins-slave-maven-rhel7-docker" \
      name="openshift3/jenkins-slave-maven-rhel7" \
      version="3.6" \
      architecture="x86_64" \
      release="4" \
      io.k8s.display-name="Jenkins Slave Maven" \
      io.k8s.description="The jenkins slave maven image has the maven tools on top of the jenkins slave base image." \
      io.openshift.tags="openshift,jenkins,slave,maven"

ENV MAVEN_VERSION=3.3 \
    BASH_ENV=/usr/local/bin/scl_enable \
    ENV=/usr/local/bin/scl_enable \
    PROMPT_COMMAND=". /usr/local/bin/scl_enable" \
    HOME=/home/jenkins \
    GRADLE_USER_HOME=/home/jenkins/.gradle

#set JAVA_HOME
ENV JAVA_HOME=/usr/lib/jvm/jre

# Install Maven
RUN yum-config-manager --enable rhel-server-rhscl-7-rpms && \
    yum-config-manager --disable epel >/dev/null || : && \
    yum install -y wget && \
    yum install -y java-1.8.0-openjdk-1.8.0.171-8.b10.el7_5.x86_64 && \
    yum install -y java-1.8.0-openjdk-devel && \
    alternatives --set java $(alternatives --display java | awk '/family.*x86_64/ { print $1; }') && \
	wget https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo && \
	sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo && \
	yum install -y apache-maven && \
    yum clean all -y && \
    mkdir -p $HOME/.m2

#Import base domain wildcard certificate
RUN echo $JAVA_HOME
RUN cat /tmp/oc_app.crt
RUN $JAVA_HOME/bin/keytool -storepasswd -new mysecretpassword -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit && \
    echo "yes" | $JAVA_HOME/bin/keytool -import -trustcacerts -file /tmp/oc_app.crt -alias oc_app -keystore $JAVA_HOME/lib/security/cacerts -storepass mysecretpassword && \
    echo "yes"

# When bash is started non-interactively, to run a shell script, for example it
# looks for this variable and source the content of this file. This will enable
# the SCL for all scripts without need to do 'scl enable'.
ADD contrib/bin/scl_enable /usr/local/bin/scl_enable
ADD contrib/bin/configure-slave /usr/local/bin/configure-slave
ADD ./contrib/settings.xml $HOME/.m2/

# install gradle ..
ADD gradlew /tmp/gradlew
RUN mkdir -p /tmp/gradle/wrapper
ADD gradle/* /tmp/gradle/wrapper
RUN ls /tmp/gradle/wrapper 

RUN /tmp/gradlew -version

RUN chown -R 1001:0 $HOME && \
    chmod -R g+rw $HOME
USER 1001

