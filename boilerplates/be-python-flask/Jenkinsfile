def final projectId = '@project_id@'
def final componentId = '@component_id@'
def final credentialsId = "${projectId}-cd-cd-user-with-password"
def sharedLibraryRepository
def dockerRegistry
node {
  sharedLibraryRepository = env.SHARED_LIBRARY_REPOSITORY
  dockerRegistry = env.DOCKER_REGISTRY
}

library identifier: 'ods-library@latest', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: sharedLibraryRepository,
   credentialsId: credentialsId])

// See readme of shared library for usage and customization.
odsPipeline(
  image: "${dockerRegistry}/cd/jenkins-slave-maven",
  projectId: projectId,
  componentId: componentId,
  verbose: true,
  openshiftBuildTimeout: 25
) { context ->
  stageBuild(context)
  stageScanForSonarqube(context)
  stageUploadToNexus(context)
  stageCreateOpenshiftEnvironment(context)
  stageUpdateOpenshiftBuild(context)
  stageDeployToOpenshift(context)
  stageTriggerAllBuilds(context)
}

def stageBuild(def context) {
  stage('Build') {
    withEnv(["TAGVERSION=${context.tagversion}"]) {
      sh "python src/tests.py"
    }
    archiveBuild(context)
  }
}

def archiveBuild(def context) {
  def distFile = "${context.componentId}-${context.tagversion}.tar.gz"
  sh "tar -czf ${distFile} src"
}
