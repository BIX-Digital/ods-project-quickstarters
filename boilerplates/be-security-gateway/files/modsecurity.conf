# NOTE: please check https://github.com/SpiderLabs/ModSecurity/blob/v3/master/modsecurity.conf-recommended
# for recommendations on modsecurity configuration and best practices.
# The previous recommendation is more focused on Apache ModSecurity module than Nginx. That is why
# you will notice some settings are different or missing from the recommendation.

SecRuleEngine On
SecRequestBodyAccess On
SecRequestBodyLimit 13107200

SecRequestBodyNoFilesLimit 64000

SecResponseBodyAccess On
SecResponseBodyLimit 10000000

SecTmpDir /tmp/
SecDataDir /tmp/
SecUploadDir /tmp/

SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"
SecAuditLogParts ABFIJKZ

SecAuditLogStorageDir /var/log/nginx/audit
SecAuditLogType Serial
# Do not change following line
SecAuditLogFormat Native
# Do not change following line
SecAuditLog /dev/stdout

SecPcreMatchLimit 500000
SecPcreMatchLimitRecursion 500000

SecDebugLog /var/log/nginx/modsec_debug.log
SecDebugLogLevel 0


# == ModSec Rule ID Namespace Definition
# Service-specific before Core-Rules:    10000 -  49999
# Service-specific after Core-Rules:     50000 -  79999
# Locally shared rules:                  80000 -  99999
# Recommended ModSec Rules (few):       200000 - 200010
# OWASP Core-Rules:                     900000 - 999999


# === ModSec Recommended Rules (in modsec src package) (ids: 200000-200010)

SecRule REQUEST_HEADERS:Content-Type "(?:application(?:/soap\+|/)|text/)xml" \
  "id:200000,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

SecRule REQUEST_HEADERS:Content-Type "application/json" \
  "id:200001,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

# TODO solve source code issue to move this SecRule back to block/deny
# SecRule REQBODY_ERROR "!@eq 0" \
#   "id:200002,phase:2,t:none,deny,status:400,log,\
#   msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"
SecRule REQBODY_ERROR "!@eq 0" \
  "id:200002,phase:2,t:none,pass,log,\
  msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"

SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
  "id:200003,phase:2,t:none,deny,status:403,log, \
  msg:'Multipart request body failed strict validation: \
  PE %{REQBODY_PROCESSOR_ERROR}, \
  BQ %{MULTIPART_BOUNDARY_QUOTED}, \
  BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
  DB %{MULTIPART_DATA_BEFORE}, \
  DA %{MULTIPART_DATA_AFTER}, \
  HF %{MULTIPART_HEADER_FOLDING}, \
  LF %{MULTIPART_LF_LINE}, \
  SM %{MULTIPART_MISSING_SEMICOLON}, \
  IQ %{MULTIPART_INVALID_QUOTING}, \
  IP %{MULTIPART_INVALID_PART}, \
  IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
  FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

SecRule TX:/^MSC_/ "!@streq 0" \
  "id:200005,phase:2,t:none,deny,status:500,\
  msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"


# === ModSecurity Rules
#

# === ModSec Core Rules Base Configuration (ids: 900000-900999)

Include /etc/nginx/crs/crs-setup.conf

# === ModSec Core Rules: Runtime Exclusion Rules (ids: 10000-49999)

# ...


# === ModSecurity Core Rules Inclusion

Include /etc/nginx/crs/rules/REQUEST-901-INITIALIZATION.conf
Include /etc/nginx/crs/rules/REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf
Include /etc/nginx/crs/rules/REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf
Include /etc/nginx/crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
Include /etc/nginx/crs/rules/REQUEST-910-IP-REPUTATION.conf
Include /etc/nginx/crs/rules/REQUEST-911-METHOD-ENFORCEMENT.conf
Include /etc/nginx/crs/rules/REQUEST-912-DOS-PROTECTION.conf
Include /etc/nginx/crs/rules/REQUEST-913-SCANNER-DETECTION.conf
Include /etc/nginx/crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
Include /etc/nginx/crs/rules/REQUEST-921-PROTOCOL-ATTACK.conf
Include /etc/nginx/crs/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf
Include /etc/nginx/crs/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf
Include /etc/nginx/crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
Include /etc/nginx/crs/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf
Include /etc/nginx/crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
Include /etc/nginx/crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
Include /etc/nginx/crs/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf
Include /etc/nginx/crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf
Include /etc/nginx/crs/rules/RESPONSE-950-DATA-LEAKAGES.conf
Include /etc/nginx/crs/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf
Include /etc/nginx/crs/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf
Include /etc/nginx/crs/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf
Include /etc/nginx/crs/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf
Include /etc/nginx/crs/rules/RESPONSE-959-BLOCKING-EVALUATION.conf
Include /etc/nginx/crs/rules/RESPONSE-980-CORRELATION.conf

# NOT YET SUPPORTED...
# SecRuleUpdateActionById

# # === ModSec Core Rules: Startup Time Rules Exclusions


